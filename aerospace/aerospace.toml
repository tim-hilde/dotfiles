# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# sketchybar
on-focus-changed = [
  "exec-and-forget osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-index-jsx\"'",
]

exec-on-workspace-change = [
  '/bin/zsh',
  '-c',
  '/usr/bin/osascript -e "tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-index-jsx\""',
]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 6
inner.vertical = 6
outer.left = 12
outer.bottom = 40
outer.top = 11
outer.right = 12

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
#                   sectionSign (ISO keyboards only, european keyboards only)
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# alt-slash = 'layout tiles horizontal vertical'
# alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
# changing focus is done with skhd due to missing key config of lalt

# See: https://nikitabobko.github.io/AeroSpace/commands#move

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-minus = 'resize smart -50'
alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
# alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-comma = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
t = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# down = 'volume down'
# up = 'volume up'
# shift-down = ['volume set 0', 'mode main']
# AeroSpace config to float specific applications using app-id and/or title


# Workspace assignments
[[on-window-detected]]
if.app-id = 'com.vivaldi.Vivaldi'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = 'move-node-to-workspace 5'

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = 'move-node-to-workspace 6'

[[on-window-detected]]
if.app-id = 'com.microsoft.Outlook'
run = 'move-node-to-workspace 6'

[[on-window-detected]]
if.app-id = 'com.todoist.mac.Todoist'
run = 'move-node-to-workspace 9'

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace 4'

# Floats
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.calculator'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-Elements.Settings'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'Karabiner-EventViewer'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'Alfred Preferences'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'ChatGPT'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'Claude'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'Shottr'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'BetterTouch'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'python'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'DeepL'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'Ice'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'us.zoom.xos'
if.window-title-regex-substring = 'Zoom Workplace'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.mail'
if.window-title-regex-substring = 'Neue E-Mail|Re:'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.mail'
if.window-title-regex-substring = 'Allgemein|Accounts|Spam|Schrift & Farbe|Darstellung|Verfassen|Signaturen|Regeln|Erweiterungen|Datenschutz'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'The Unarchiver'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.zotero.Zotero'
if.window-title-regex-substring = 'Plugins Manager'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'Pearcleaner'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
if.window-title-regex-substring = 'Allgemein|Tabs|Automatisch ausfüllen|Passwörter|Suchen|Sicherheit|Datenschutz|Websites|Profile|Erweiterungen|Erweitert|Entwickler|Feature Flags'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'Logi Options\\+'
run = 'layout floating'
